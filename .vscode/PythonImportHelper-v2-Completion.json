[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "glob",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "glob",
        "description": "glob",
        "detail": "glob",
        "documentation": {}
    },
    {
        "label": "QApplication",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMainWindow",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QPushButton",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWidget",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QFormLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QComboBox",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QCheckBox",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QVBoxLayout",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QLabel",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QListWidget",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QSlider",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QColorDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QMessageBox",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QInputDialog",
        "importPath": "PySide6.QtWidgets",
        "description": "PySide6.QtWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWidgets",
        "documentation": {}
    },
    {
        "label": "QWebEngineView",
        "importPath": "PySide6.QtWebEngineWidgets",
        "description": "PySide6.QtWebEngineWidgets",
        "isExtraImport": true,
        "detail": "PySide6.QtWebEngineWidgets",
        "documentation": {}
    },
    {
        "label": "Qt",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QUrl",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QTimer",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QPoint",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QThread",
        "importPath": "PySide6.QtCore",
        "description": "PySide6.QtCore",
        "isExtraImport": true,
        "detail": "PySide6.QtCore",
        "documentation": {}
    },
    {
        "label": "QCursor",
        "importPath": "PySide6.QtGui",
        "description": "PySide6.QtGui",
        "isExtraImport": true,
        "detail": "PySide6.QtGui",
        "documentation": {}
    },
    {
        "label": "mouse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mouse",
        "description": "mouse",
        "detail": "mouse",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "win11toast",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "win11toast",
        "description": "win11toast",
        "detail": "win11toast",
        "documentation": {}
    },
    {
        "label": "ScreenTrail",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class ScreenTrail(QWebEngineView):\n    def __init__(self, trail_path, settings={}):\n        super().__init__()\n        self.setWindowTitle(\"Screen Trail\")\n        self.showFullScreen()\n        self.settings = settings\n        # Set window properties for transparency\n        self.setWindowFlags(Qt.FramelessWindowHint |\n                            Qt.WindowStaysOnTopHint | Qt.Tool)\n        self.setAttribute(Qt.WA_TranslucentBackground)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "MainSettingsWindow",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class MainSettingsWindow(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.setWindowTitle(\"Trail Settings\")\n        self.setGeometry(100, 100, 300, 200)\n        # Central widget setup\n        central_widget = QWidget(self)\n        self.setCentralWidget(central_widget)\n        self.layout = QFormLayout(central_widget)\n        if not trails:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "TrailEditor",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class TrailEditor(QDialog):\n    def __init__(self, parent=None):\n        super().__init__(parent)\n        self.setWindowTitle(\"Trail Editor\")\n        self.setGeometry(200, 200, 400, 500)\n        self._layout = QVBoxLayout(self)\n        # Shape Selector\n        self.shape_selector = QComboBox()\n        self.shape_selector.editTextChanged.connect(self.updateUI)\n        self.shape_selectorL = QLabel(\"Shape:\", self.shape_selector)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "check_for_update",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def check_for_update():\n    try:\n        response = requests.get(LATEST_RELEASE_API, timeout=5)\n        response.raise_for_status()\n        latest_release = response.json()\n        latest_version = latest_release[\"tag_name\"]\n        download_url = latest_release[\"assets\"][0][\"browser_download_url\"]\n        if latest_version != release_version:\n            win11toast.toast(\n                \"CMT: Update Available\",",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "download_update",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def download_update(url, latest_version):\n    \"\"\"Download the latest version and close the game after completion.\"\"\"\n    exe_path = os.path.join(os.getcwd(), f\"beat down - {latest_version}.exe\")  # Save as \"beat down - {version}.exe\"\n    try:\n        response = requests.get(url, stream=True)\n        with open(exe_path, \"wb\") as f:\n            for chunk in response.iter_content(1024):\n                f.write(chunk)\n        win11toast.toast(\"CMT: Download Complete\", \"The latest version has been downloaded. you can now use the new file.\")\n        # Close the game after downloading",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "release_version",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "release_version = \"v1.0.1\"\n# GitHub repository details\nGITHUB_REPO = \"jacs121/custom-trail-for-the-mouse\"\nLATEST_RELEASE_API = f\"https://api.github.com/repos/{GITHUB_REPO}/releases/latest\"\ndef check_for_update():\n    try:\n        response = requests.get(LATEST_RELEASE_API, timeout=5)\n        response.raise_for_status()\n        latest_release = response.json()\n        latest_version = latest_release[\"tag_name\"]",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "GITHUB_REPO",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "GITHUB_REPO = \"jacs121/custom-trail-for-the-mouse\"\nLATEST_RELEASE_API = f\"https://api.github.com/repos/{GITHUB_REPO}/releases/latest\"\ndef check_for_update():\n    try:\n        response = requests.get(LATEST_RELEASE_API, timeout=5)\n        response.raise_for_status()\n        latest_release = response.json()\n        latest_version = latest_release[\"tag_name\"]\n        download_url = latest_release[\"assets\"][0][\"browser_download_url\"]\n        if latest_version != release_version:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "LATEST_RELEASE_API",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "LATEST_RELEASE_API = f\"https://api.github.com/repos/{GITHUB_REPO}/releases/latest\"\ndef check_for_update():\n    try:\n        response = requests.get(LATEST_RELEASE_API, timeout=5)\n        response.raise_for_status()\n        latest_release = response.json()\n        latest_version = latest_release[\"tag_name\"]\n        download_url = latest_release[\"assets\"][0][\"browser_download_url\"]\n        if latest_version != release_version:\n            win11toast.toast(",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "trails",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "trails = {\n    os.path.basename(file).split(\".\")[0].title(): os.path.join(os.path.dirname(__file__), file)\n    for file in glob.glob(\"./MTdata/trails/*.html\")\n}\nfor trail in glob.glob(\"./MTdata/custom_trails/*.json\"):\n    trails.update({os.path.basename(trail).split(\n        \".\")[0].upper(): os.path.join(os.path.dirname(__file__), trail)})\nclass ScreenTrail(QWebEngineView):\n    def __init__(self, trail_path, settings={}):\n        super().__init__()",
        "detail": "main",
        "documentation": {}
    }
]